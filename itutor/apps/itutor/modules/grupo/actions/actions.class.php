<?php

/*
  This file is part of iTutor.
  Copyright (C) 2008 Oihane Garcia Bolumburu <oihaneg@gmail.com>
  Copyright (C) 2008 Ion Jaureguialzo Sarasola <widemos@gmail.com>

  iTutor is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  iTutor is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with iTutor. If not, see <http://www.gnu.org/licenses/>.
*/

?>
<?php
// auto-generated by sfPropelCrud
// date: 2008/03/07 16:41:28
?>
<?php

/**
 * grupo actions.
 *
 * @package    gesal
 * @subpackage grupo
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class grupoActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('grupo', 'list');
  }

  public function executeList()
  {
    $c = new Criteria();
    $c->addAscendingOrderByColumn(GrupoPeer::NOMBRE);

    $this->grupos = GrupoPeer::doSelect($c);
    
    $this->profesores = ProfesorPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->grupo = GrupoPeer::retrieveByPk($this->getRequestParameter('id'));
    
    $this->profesor = ProfesorPeer::retrieveByPk($this->grupo->getProfesorId());
    
    $this->forward404Unless($this->grupo);
  }

  public function executeCreate()
  {
    $this->grupo = new Grupo();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->grupo = GrupoPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->grupo);
  }

  public function executeUpdate()
  {
   if (!$this->getRequestParameter('profesor_id'))
   {
      $mensaje = 'Se debe asignar un tutor al grupo.';     
      return $this->redirect('principal/error?mensaje='.$mensaje);
   }
   else
   {
    if (!$this->getRequestParameter('id'))
    {
      $grupo = new Grupo();

      $grupo->setId($this->getRequestParameter('id'));
      $grupo->setNombre($this->getRequestParameter('nombre'));
      $grupo->setDescripcion($this->getRequestParameter('descripcion'));
      $grupo->setProfesorId($this->getRequestParameter('profesor_id') ? $this->getRequestParameter('profesor_id') : null);
      $grupo->setObservaciones($this->getRequestParameter('observaciones'));
      $grupo->setActivo($this->getRequestParameter('activo', 0));

      $grupo->save();

      $dir = "images/grupos/".$grupo->getId();
      mkdir($dir,0777);
    }
    else
    {
      $grupo = GrupoPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($grupo);

      $grupo->setId($this->getRequestParameter('id'));
      $grupo->setNombre($this->getRequestParameter('nombre'));
      $grupo->setDescripcion($this->getRequestParameter('descripcion'));
      $grupo->setProfesorId($this->getRequestParameter('profesor_id') ? $this->getRequestParameter('profesor_id') : null);
      $grupo->setObservaciones($this->getRequestParameter('observaciones'));
      $grupo->setActivo($this->getRequestParameter('activo', 0));

      $grupo->save();
   
    }

    

    return $this->redirect('grupo/list');
    }
  }

  public function executeDelete()
  {
    $grupo = GrupoPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($grupo);

    $grupo->delete();

    return $this->redirect('grupo/list');
  }
}
